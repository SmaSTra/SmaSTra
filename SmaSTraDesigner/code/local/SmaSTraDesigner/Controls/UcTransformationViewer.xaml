<local:UcNodeViewer
	x:Class="SmaSTraDesigner.Controls.UcTransformationViewer"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:local="clr-namespace:SmaSTraDesigner.Controls"
    xmlns:ctrlSupport="clr-namespace:SmaSTraDesigner.Controls.Support"
	xmlns:converters="clr-namespace:Common.Resources.Converters;assembly=PresentationCommonLib"
    xmlns:logic="clr-namespace:SmaSTraDesigner.BusinessLogic"
	mc:Ignorable="d"
    ToolTip="{StaticResource nodeViewerToolTip}"
	x:Name="This">
    <local:UcNodeViewer.Resources>
        <converters:LambdaConverter x:Key="InputItemsSourceConverter" />
        <logic:ConverterInputTypeName x:Key="InputTypeNameConverter" />
    </local:UcNodeViewer.Resources>
    <local:UcNodeViewer.InputBindings>
        <MouseBinding Gesture="LeftDoubleClick" Command="ctrlSupport:Commands.SelectConnected" />
        <MouseBinding Gesture="CTRL+LeftClick" Command="ctrlSupport:Commands.AddSelected" />
    </local:UcNodeViewer.InputBindings>
    <local:UcNodeViewer.ContextMenu>
        <ContextMenu>
            <MenuItem Command="ctrlSupport:Commands.SelectConnected" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.AddSelected" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.AddToLibrary" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.Merge" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.Unmerge" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.CustomCode" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
            <MenuItem Command="ctrlSupport:Commands.Delete" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Visibility="{Binding Path=IsEnabled , RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityAsBooleanConverter}}"/>
        </ContextMenu>
    </local:UcNodeViewer.ContextMenu>

    <Grid HorizontalAlignment="Center" VerticalAlignment="Top"  Margin="8,0,8,0">
        <Border x:Name="borderHighlightBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush>
                                <SolidColorBrush.Color>
                                    <Color R="0" G="0" B="0" A="0" />
                                </SolidColorBrush.Color>
                            </SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=This, Path=IsSelected}" Value="True">
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="5" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Blue"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=This, Path=IsInSelectionArea}" Value="True">
                            <Setter Property="BorderBrush" Value="DarkBlue" />
                            <Setter Property="BorderThickness" Value="5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid >
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=This, Path=IsSelected}" Value="True">
                                <Setter Property="Background" Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
        </Border>

        <StackPanel>
            <Grid>
                <TextBlock Name="tbTransformationName" FontFamily="Tahoma Regular" Foreground="White" Text="{Binding Path=Name}" TextAlignment="Center" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" MinWidth="80" Padding="10,3,10,3.5"  >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{StaticResource ColorDouble}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Class.InputTypes.Length}" Value="1">
                                    <Setter Property="Background" Value="{StaticResource ColorLong}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid Width="{Binding ActualWidth, ElementName=tbTransformationName}" Height="{Binding ActualHeight, ElementName=tbTransformationName}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/left_name_window.png"/>
                    <Image Grid.Column="1" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/middle_name_window.png" />
                    <Image Grid.Column="2" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/right_name_window.png"/>
                </Grid>
            </Grid>

            <Grid Width="{Binding ActualWidth, ElementName=tbTransformationName}" Height="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/left_top_window.png" />
                <Image Grid.Column="1" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/middle_top_window.png" />
                <Image Grid.Column="2" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/right_top_window.png" />
            </Grid>

            <Grid>
                <ItemsControl x:Name="icInputHandles" ItemsSource="{Binding Path=InputIOData, Converter={StaticResource InputItemsSourceConverter}}" IsHitTestVisible="True">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid Width="{Binding ActualWidth, ElementName=tbTransformationName}" Height="{Binding ActualHeight, ElementName=tbTransformationName}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/left_middle_window_78.png" />
                                    <Image Grid.Column="1" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/middle_middle_window_75.png"  />
                                    <Image Grid.Column="2" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/right_middle_window_78.png" />
                                </Grid>
                                <WrapPanel>
                                    <Grid >
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Item1.Value.Length}" Value="0">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <local:UcIOHandle IsInput="True" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Item1}" InputIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Item2}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-7,0,0,0" >
                                        </local:UcIOHandle>
                                    </Grid>
                                    <TextBlock DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Item1}" FontFamily="Tahoma Regular" Text="{Binding Path=InputGUIString}" Foreground="White" Height="{Binding ActualHeight, ElementName=tbTransformationName}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" MaxWidth="{Binding ActualWidth, ElementName=tbTransformationName}" Padding="10,0,10,0" Margin="-5,3,0,-5" />
                                </WrapPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <local:UcIOHandle IsInput="False" DataContext="{Binding ElementName=This, Path=DataContext.OutputIOData}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-14,0" />
            </Grid>

            <Grid Width="{Binding ActualWidth, ElementName=tbTransformationName}" Height="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/left_bottom_window.png"/>
                <Image Grid.Column="1" Stretch="Fill" Source="pack://siteoforigin:,,,/Resources/middle_bottom_window.png" />
                <Image Grid.Column="2" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/right_bottom_window.png" />
            </Grid>

        </StackPanel>

        <!--<local:UcIOHandle IsInput="False" DataContext="{Binding ElementName=This, Path=DataContext.OutputIOData}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,15,-14,0" />-->

    </Grid>
</local:UcNodeViewer>
