<Window
	x:Class="SmaSTraDesigner.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:SmaSTraDesigner"
	xmlns:ctrl="clr-namespace:SmaSTraDesigner.Controls"
    xmlns:ctrlSupport="clr-namespace:SmaSTraDesigner.Controls.Support"
    xmlns:logic="clr-namespace:SmaSTraDesigner.BusinessLogic"
    xmlns:wpfConverters="clr-namespace:Common.Resources.Converters;assembly=WpfCommonLib"
    xmlns:conf="clr-namespace:SmaSTraDesigner.BusinessLogic.config"
	mc:Ignorable="d"
	x:Name="This" 
    Title="{Binding Source={x:Static conf:WorkSpace.DIR}, Mode=OneWay, StringFormat=SmaSTra   WorkSpace:({0})}"
    d:DesignWidth="900" d:DesignHeight="650" Icon="pack://siteoforigin:,,,/Resources/logo_smastra.png"
    Closing="This_Closing">
    <Window.CommandBindings>
        <CommandBinding Command="ctrlSupport:Commands.DebugTest" CanExecute="DebugTest_CanExecute" Executed="DebugTest_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.New" CanExecute="New_CanExecute" Executed="New_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Save" CanExecute="Save_CanExecute" Executed="Save_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Load" CanExecute="Load_CanExecute" Executed="Load_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Exit" CanExecute="Exit_CanExecute" Executed="Exit_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Merge" CanExecute="Merge_CanExecute" Executed="Merge_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Unmerge" CanExecute="Unmerge_CanExecute" Executed="Unmerge_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Generate" CanExecute="Generate_CanExecute" Executed="Generate_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Delete" CanExecute="Delete_CanExecute" Executed="Delete_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.SelectConnected" CanExecute="SelectConnected_CanExecute" Executed="SelectConnected_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.AddSelected" CanExecute="AddSelected_CanExecute" Executed="AddSelected_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.ToOutputViewer" CanExecute="ToOutputViewer_CanExecute" Executed="ToOutputViewer_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.AddToLibrary" CanExecute="AddToLibrary_CanExecute" Executed="AddToLibrary_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.CreateCustomElement" CanExecute="CreateCustomElement_CanExecute" Executed="CreateCustomElement_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.SwitchWorkspace" CanExecute="SwitchWorkspace_CanExecute" Executed="SwitchWorkspace_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.OnlineTransformations" CanExecute="OnlineTransformations_CanExecute" Executed="OnlineTransformations_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.PasteNode" CanExecute="PasteNode_CanExecute" Executed="PasteNode_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.OrganizeNodes" CanExecute="OrganizeNodes_CanExecute" Executed="OrganizeNodes_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.CustomCode" CanExecute="CustomCode_CanExecute" Executed="CustomCode_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.About" CanExecute="About_CanExecute" Executed="About_Executed" />
        <CommandBinding Command="ctrlSupport:Commands.FocusInputValue" CanExecute="FocusInputValue_CanExecute" Executed="FocusInputValue_Executed" />
    </Window.CommandBindings>
    <Grid MaxHeight="{Binding ElementName=This, Path=ActualHeight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="100" />
                <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

            <Menu x:Name="mnuMain" Grid.ColumnSpan="99" Grid.Row="0" HorizontalAlignment="Stretch">
                <MenuItem x:Name="mniFile" Header="File">
                    <MenuItem x:Name="mniNew" Header="New" Command="ctrlSupport:Commands.New" />
                    <MenuItem x:Name="mniSwitchWorkspace" Header="Switch Workspace" Command="ctrlSupport:Commands.SwitchWorkspace" />
                    <MenuItem x:Name="mniSave" Header="Save" Command="ctrlSupport:Commands.Save" />
                    <MenuItem x:Name="mniLoad" Header="Load" Command="ctrlSupport:Commands.Load" />
                    <MenuItem x:Name="mniExit" Header="Exit" Command="ctrlSupport:Commands.Exit" />
                </MenuItem>
                <MenuItem x:Name="mniEdit" Header="Edit">
                    <MenuItem x:Name="mniUndo" Header="Undo" Command="ctrlSupport:Commands.Undo" />
                    <MenuItem x:Name="mniRedo" Header="Redo" Command="ctrlSupport:Commands.Redo" />
                    <MenuItem x:Name="mniMerge" Header="Merge" Command="ctrlSupport:Commands.Merge" />
                    <MenuItem x:Name="mniUnmerge" Header="Unmerge" Command="ctrlSupport:Commands.Unmerge" />
                    <MenuItem x:Name="mniCreateCustomElement" Header="Create Custom Element" Command="ctrlSupport:Commands.CreateCustomElement" />
                </MenuItem>
                <MenuItem Header="Tree">
                    <MenuItem x:Name="mniGenerateJava" Header="Generate Java code..." Command="ctrlSupport:Commands.Generate" />
                </MenuItem>
            <MenuItem Header="About" Command="ctrlSupport:Commands.About" />
        </Menu>
            <Border Grid.Row="1" Grid.ColumnSpan="99" BorderBrush="Black" BorderThickness="1,1,1,0" Background="{StaticResource ColorPanelBackground}">
                <StackPanel  Orientation="Horizontal" Margin="5">
                <Button Command="ctrlSupport:Commands.Save" Grid.Column="0" Width="30" ToolTip="Save" Style="{StaticResource ButtonCustomBackground}">
                        <Image Stretch="Uniform" Margin="1,2,1,2" Source="pack://siteoforigin:,,,/Resources/save.png"/>
                    </Button>
                    <Button Command="ctrlSupport:Commands.Load" Grid.Column="1" Width="30" ToolTip="Open" Margin="5,0,0,0" Style="{StaticResource ButtonCustomBackground}">
                    <Image Stretch="Uniform" Margin="1" Source="pack://siteoforigin:,,,/Resources/open.png"/>
                    </Button>
                <Button Command="ctrlSupport:Commands.Undo" Grid.Column="1" Width="30" Style="{StaticResource ButtonCustomBackground}" ToolTip="Undo" Margin="50,0,0,0">
                    <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/backward.png"/>
                    </Button>
                <Button Command="ctrlSupport:Commands.Redo" Grid.Column="1" Width="30" Style="{StaticResource ButtonCustomBackground}" ToolTip="Redo" Margin="5,0,0,0">
                    <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/forward.png"/>
                    </Button>
                </StackPanel>
            </Border>

            <Grid Grid.ColumnSpan="99" Grid.Row="2" Background="{StaticResource ColorPanelBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Column="0" Grid.Row="0" BorderBrush="Black" BorderThickness="0,1,0,0" Background="{StaticResource ColorPanelBackground}" >
                    <StackPanel Orientation="Horizontal" x:Name="spnNodeTypeMenu">
                        <Border BorderBrush="Black" BorderThickness="1,0,1,0">
                            <ToggleButton x:Name="togDataSources" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleDataSources, Mode=TwoWay}" VerticalContentAlignment="Center">
                                <WrapPanel ToolTip="DataSources">
                                    <Image Width="50" Source="pack://siteoforigin:,,,/Resources/0v1_blue.png"/>
                                </WrapPanel>
                            </ToggleButton>
                        </Border>
                        <Border BorderBrush="Black" BorderThickness="0,0,1,0">
                            <ToggleButton x:Name="togConversions" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleConversions, Mode=TwoWay}" VerticalContentAlignment="Center">
                                <WrapPanel ToolTip="Conversions">
                                    <Image Width="50" Source="pack://siteoforigin:,,,/Resources/1v1_blue.png"/>
                                </WrapPanel>
                            </ToggleButton>
                        </Border>
                        <Border BorderBrush="Black" BorderThickness="0,0,1,0">
                            <ToggleButton x:Name="togTransformations" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleTransformations, Mode=TwoWay}" VerticalContentAlignment="Center">
                                <WrapPanel ToolTip="Transformations">
                                    <Image Width="50" Source="pack://siteoforigin:,,,/Resources/2v1_blue.png"/>
                                </WrapPanel>
                            </ToggleButton>
                        </Border>

                        <Grid x:Name="gridSideMenu" Margin="50,0,10,0" Background="{StaticResource ColorPanelBackground}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.Visibility>
                                <MultiBinding Converter="{StaticResource VisibilityAsBooleanConverter}" ConverterParameter="{x:Static wpfConverters:VisibilityAsBooleanConverterOptions.UseHidden}" >
                                    <Binding ElementName="togDataSources" Path="IsChecked" Mode="OneWay" />
                                    <Binding ElementName="togConversions" Path="IsChecked" Mode="OneWay" />
                                    <Binding ElementName="togTransformations" Path="IsChecked" Mode="OneWay" />
                                </MultiBinding>
                            </Grid.Visibility>

                            <Border Grid.Column="1" BorderBrush="Black" BorderThickness="1,0,1,0">
                                <ToggleButton x:Name="tglDefaultTF" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleBasic, Mode=TwoWay}" >
                                    <WrapPanel ToolTip="Default Elements">
                                        <Image Width="35" Margin="5,0,5,0" Source="pack://siteoforigin:,,,/Resources/default_transf.png"/>
                                    </WrapPanel>
                                </ToggleButton>
                            </Border>
                            <Border Grid.Column="2"  BorderBrush="Black" BorderThickness="0,0,1,0" >
                                <ToggleButton x:Name="tglCustomTF" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleCustom, Mode=TwoWay}" >
                                    <WrapPanel ToolTip="Custom Elements">
                                        <Image Width="35" Margin="5,0,5,0" Source="pack://siteoforigin:,,,/Resources/custom_elements.png"/>
                                    </WrapPanel>
                                </ToggleButton>
                            </Border>
                            <Border Grid.Column="3" BorderBrush="Black" BorderThickness="0,0,1,0" >
                                <ToggleButton x:Name="tglCombinedTF" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding Path=ToggleCombined, Mode=TwoWay}">
                                    <WrapPanel ToolTip="Combined Elements">
                                        <Image Width="35" Margin="5,0,5,0" Source="pack://siteoforigin:,,,/Resources/combined_transf.png"/>
                                    </WrapPanel>
                                </ToggleButton>
                            </Border>
                        </Grid>

                        

                        <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                            <TextBlock Text="Filter: " VerticalAlignment="Bottom" Style="{StaticResource TextBlockStyle}"/>
                            <TextBox x:Name="tboxNodeFilter" Width="170"  VerticalAlignment="Bottom" Text="{Binding Path=FilterString, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxtyle}"/>
                        <Button x:Name="btnFilterClear" Background="Transparent" Content="X" FontSize="15" Margin="5,0,0,3" Height="{Binding ElementName=tboxNodeFilter, Path=ActualHeight}" VerticalAlignment="Bottom" Foreground="White" Click="btnFilterClear_Click">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property ="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType ="{x:Type Button}">
                                                <Grid>
                                                    <Image x:Name="imageButtonBackground" Stretch="Uniform" Margin="0,5,0,0" Source="pack://siteoforigin:,,,/Resources/close_white.png"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property ="IsPressed" Value ="True">
                                                        <Setter TargetName="imageButtonBackground" Property="Source">
                                                            <Setter.Value>
                                                                pack://siteoforigin:,,,/Resources/close_white_pressed.png
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <Button x:Name="btnOnlineTransformations" Command="ctrlSupport:Commands.OnlineTransformations" VerticalAlignment="Center"  Width="40" Margin="50,0,0,0" ToolTip="Online Menu" Style="{StaticResource ButtonCustomBackground}">
                        <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/datenaustausch_online.png"/>
                    </Button>
                </StackPanel>
                </Border>

                <Border Grid.Column="0" Grid.Row="1" BorderBrush="Black" BorderThickness="1,1,1,2">
                    <ScrollViewer  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="{StaticResource ColorPanelTitel}">
                        <StackPanel x:Name="spnNodeClasses" Orientation="Horizontal">

                        <ItemsControl x:Name="icFilteredElements" ItemsSource="{Binding Path=FilteredNodeViewers}" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                        </StackPanel>
                    </ScrollViewer>
                </Border>
                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Height="{Binding ElementName=spnNodeClasses, Path=ActualHeight}" Margin="0,-10,0,10">
                    <Image Width="{Binding ElementName=togDataSources, Path=ActualWidth}" Height="7" Visibility="{Binding ElementName=togDataSources, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}, ConverterParameter={x:Static wpfConverters:VisibilityAsBooleanConverterOptions.UseHidden}}" VerticalAlignment="Top" Source="pack://siteoforigin:,,,/Resources/pfeil.png" />
                    <Image Width="{Binding ElementName=togDataSources, Path=ActualWidth}" Height="7" Margin="5,0,0,0" Visibility="{Binding ElementName=togConversions, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}, ConverterParameter={x:Static wpfConverters:VisibilityAsBooleanConverterOptions.UseHidden}}"  VerticalAlignment="Top" Source="pack://siteoforigin:,,,/Resources/pfeil.png" />
                    <Image Width="{Binding ElementName=togDataSources, Path=ActualWidth}" Height="7" Margin="5,0,0,0" Visibility="{Binding ElementName=togTransformations, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}, ConverterParameter={x:Static wpfConverters:VisibilityAsBooleanConverterOptions.UseHidden}}" VerticalAlignment="Top" Source="pack://siteoforigin:,,,/Resources/pfeil.png" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="0" Grid.ColumnSpan="99" Grid.Row="3" Height="5" Background="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

            <ctrl:UcTreeDesigner x:Name="tdTreeDesigner" Grid.Column="0" Grid.Row="4" />


            <GridSplitter Grid.Column="1" Grid.Row="4" Width="5" Background="Black" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

            <ScrollViewer Grid.Column="2" Grid.Row="4" Background="{StaticResource ColorPanelBackground}">
                <StackPanel>

                    <DockPanel>
                        <Border DockPanel.Dock="Top" BorderThickness="1" BorderBrush="Black">
                            <ToggleButton x:Name="togOnlinePanel" Content="Online Transformations" Foreground="White" FontSize="{StaticResource FontSizeMedium}" Style="{StaticResource ToggleButtonStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                        <StackPanel x:Name="spnOnlinePanel" IsVisibleChanged="spnOnlinePanel_IsVisibleChanged" Visibility="{Binding ElementName=togOnlinePanel, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}}">
                            <Border BorderBrush="Black" BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <DockPanel x:Name="dockOnlineElements">
                                        <ListView x:Name="listOnlineElements" DockPanel.Dock="Top" Background="{StaticResource ColorPanelTitel}" ItemsSource="{Binding Path=OnlineElementsList}" SelectionChanged="listOnlineElements_SelectionChanged">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <DataTemplate.Resources>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                                    </DataTemplate.Resources>
                                                    <WrapPanel>
                                                        <TextBlock Text="{Binding Name}" />
                                                    </WrapPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>

                                        <Button x:Name="UpdateButton" DockPanel.Dock="Bottom" Height="30" Style="{StaticResource imageButtonTemplate}" Click="UpdateButton_Click" >
                                            <TextBlock Text="Update list" FontSize="{StaticResource FontSizeMedium}"/>
                                        </Button>

                                    </DockPanel>

                                    <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                                    <ScrollViewer Grid.Column="2" Height="{Binding ElementName=dockOnlineElements, Path=ActualHeight}" HorizontalScrollBarVisibility="Auto" PreviewMouseWheel="propagate_MouseWheel">
                                        <StackPanel x:Name="spnElementDetails" >
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                            </StackPanel.Resources>
                                        <Grid Margin="5,5,0,5" >
                                            <ItemsControl  ItemsSource="{Binding Path=TempViewerList}" >
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Grid x:Name="gridOnlinePreview" HorizontalAlignment="Left">
                                                        </Grid>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <Rectangle Width="{Binding Path=ActualWidth, ElementName=gridOnlinePreview}" Height="{Binding Path=ActualHeight, ElementName=gridOnlinePreview}" Fill="Transparent"/>
                                        </Grid>
                                        <WrapPanel>
                                                <TextBlock Text="Name: "/>
                                                <TextBlock x:Name="tbDetailName" Text="{Binding Path=SelectedClass.Name}"/>
                                            </WrapPanel>
                                            <WrapPanel>
                                                <TextBlock Text="Description: "/>
                                                <TextBlock x:Name="tbDetailDescription" Text="{Binding Path=SelectedClass.Description}"/>
                                            </WrapPanel>
                                            <WrapPanel>
                                                <TextBlock Text="Display: "/>
                                                <TextBlock x:Name="tbDetailDisplay" Text="{Binding Path=SelectedClass.Display}"/>
                                            </WrapPanel>
                                            <StackPanel>
                                                <TextBlock x:Name="tbDetailInputs" Text="Inputs:"/>
                                                <ItemsControl x:Name="icDetailInputs" ItemsSource="{Binding Path=SelectedClass.Inputs}" Margin="10,0,0,0">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding}" Style="{StaticResource TextBlockStyle}"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                            <WrapPanel>
                                                <TextBlock Text="Output: "/>
                                                <TextBlock x:Name="tbDetailOutput" Text="{Binding Path=SelectedClass.Output}"/>
                                            </WrapPanel>
                                        <WrapPanel>
                                            <TextBlock Text="Type: "/>
                                            <TextBlock x:Name="tbDetailType" Text="{Binding Path=SelectedClass.Type}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Border>


                            <Button x:Name="btnDownloadElement" Width="100" Click="btnDownloadElement_Click" Style="{StaticResource imageButtonTemplate}">
                                <TextBlock Text="Download" FontSize="{StaticResource FontSizeLarge}" />
                            </Button>

                            <Border BorderBrush="Black" BorderThickness="1" Margin="0,20,0,0">
                                <Grid x:Name="uploadDropZone" Background="LightGray" Height="50" ToolTip="Drop Elements here to upload them" AllowDrop="True" Drop="uploadDropZone_Drop">
                                    <TextBlock Text="Upload Drop Zone" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>

                            <TextBlock x:Name="tbOnlineStatusBar" HorizontalAlignment="Center" Margin="10" Text="{Binding Path=StatusBarText}" Style="{StaticResource TextBlockStyle}"/>
                        </StackPanel>
                    </DockPanel>

                    <DockPanel>
                        <Border BorderThickness="1" BorderBrush="Black" DockPanel.Dock="Top">
                            <ToggleButton x:Name="togPropertiesPanel" Content="Properties" IsChecked="True" Foreground="White" FontSize="{StaticResource FontSizeMedium}" Style="{StaticResource ToggleButtonStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                        <ScrollViewer x:Name="scrollProperties" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden" PreviewMouseWheel="propagate_MouseWheel">
                            <StackPanel x:Name="spnProperties" Margin="5,0,0,0" Background="{StaticResource ColorPanelBackground}" Visibility="{Binding ElementName=togPropertiesPanel, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}}">
                                <StackPanel.Resources>
                                    <logic:ConverterInputTypeName x:Key="InputTypeNameConverter" />
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxtyle}"/>
                                </StackPanel.Resources>
                                <WrapPanel>
                                    <TextBlock Text="Name: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox  HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodeName ,UpdateSourceTrigger=PropertyChanged}" MinWidth="50" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Class: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodeClass ,UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <TextBlock Text="Input: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <WrapPanel>
                                    <ItemsControl x:Name="icNodeClassInputTypes" ItemsSource="{Binding Path=NodeInputIOData, UpdateSourceTrigger=PropertyChanged}" >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DataTemplate.Resources>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxtyle}"/>
                                                </DataTemplate.Resources>
                                                <StackPanel Orientation="Vertical" >
                                                    <WrapPanel>
                                                        <TextBlock Text="{Binding Path=Type.Name, Converter={StaticResource InputTypeNameConverter}, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap"/>
                                                        <TextBlock Text=": " TextWrapping="Wrap"/>
                                                        <Grid>
                                                            <TextBlock Text="{Binding Path=ConnectedNode.Name, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" MinWidth="50" Background="#898989"/>
                                                            <TextBox x:Name="tboxInputValue" Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" MinWidth="50" Background="Transparent" PreviewTextInput="InputType_PreviewTextInput"/>
                                                        </Grid>
                                                    </WrapPanel>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </WrapPanel>
                                <TextBlock Text="Configuration: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <WrapPanel>
                                    <ItemsControl x:Name="icNodeConfiguration" ItemsSource="{Binding Path=NodeConfiguration, UpdateSourceTrigger=PropertyChanged}" >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DataTemplate.Resources>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxtyle}"/>
                                                </DataTemplate.Resources>
                                                <StackPanel Orientation="Vertical" >
                                                    <WrapPanel>
                                                        <TextBlock Text="{Binding Path=DataType.Name, Converter={StaticResource InputTypeNameConverter}, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap"/>
                                                        <TextBlock Text=": " TextWrapping="Wrap"/>
                                                        <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" MinWidth="50"/>
                                                    </WrapPanel>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Output: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodeClassOutput ,UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="X: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodePositionX ,UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Y: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodePositionY ,UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <WrapPanel>
                                    <TextBlock Text="Description: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=NodeClassDescription ,UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </DockPanel>

                    <DockPanel x:Name="spnLibrary" AllowDrop="True" Drop="spnLibrary_Drop" DragEnter="spnLibrary_DragEnter"  >
                        <Border DockPanel.Dock="Top" BorderThickness="1" BorderBrush="Black">
                            <ToggleButton x:Name="togLibraryPanel" Content="Library" IsChecked="True" Foreground="White" FontSize="{StaticResource FontSizeMedium}" Style="{StaticResource ToggleButtonStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                        <StackPanel Background="{StaticResource ColorPanelBackground}" Visibility="{Binding ElementName=togLibraryPanel, Path=IsChecked, Converter={StaticResource VisibilityAsBooleanConverter}}" >
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxtyle}"/>
                            </StackPanel.Resources>
                            <ItemsControl Name="icLibraryNodeList" ItemsSource="{Binding Path=LibraryNodeViewerList}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel>
                                        </StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </StackPanel>
                    </DockPanel>
                </StackPanel>
            </ScrollViewer>

            <Grid x:Name="gridStatusBar" Grid.Row="5" Grid.ColumnSpan="99" Background="{StaticResource ColorPanelTitel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
                <TextBlock x:Name="textStatusBar" Grid.Column="0" Foreground="White" Text="default status text" Margin="5,0,0,0"/>
            <TextBlock x:Name="textVersionNumber" Grid.Column="1" Foreground="White" HorizontalAlignment="Right" Margin="0,0,0,5"/>
            </Grid>
        </Grid>
</Window>
