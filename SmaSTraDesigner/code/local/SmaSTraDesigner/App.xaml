<Application
	x:Class="SmaSTraDesigner.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:local="clr-namespace:SmaSTraDesigner"
	xmlns:presConverters="clr-namespace:Common.Resources.Converters;assembly=PresentationCommonLib"
	xmlns:wpfConverters="clr-namespace:Common.Resources.Converters;assembly=WpfCommonLib"
	xmlns:ctrl="clr-namespace:SmaSTraDesigner.Controls"
	xmlns:ctrlSupport="clr-namespace:SmaSTraDesigner.Controls.Support"
	Startup="Application_Startup" DispatcherUnhandledException="Application_DispatcherUnhandledException">
	<Application.Resources>
        <wpfConverters:VisibilityAsBooleanConverter x:Key="VisibilityAsBooleanConverter" />
        <presConverters:LambdaConverter x:Key="ToolTipConverter" />
		<ctrlSupport:NodeListTemplateSelector x:Key="NodeListTemplateSelector" />
		<DataTemplate x:Key="TransformationNodeTemplate">
            <ctrl:UcTransformationViewer Margin="5,5" IsPreview="True" />
		</DataTemplate>
		<DataTemplate x:Key="OutputNodeTemplate">
			<ctrl:UcOutputViewer Margin="5,5" IsPreview="True" />
		</DataTemplate>
        <DataTemplate x:Key="DataSourceNodeTemplate">
            <ctrl:UcDataSourceViewer Margin="5,5" IsPreview="True" />
        </DataTemplate>

        <sys:Double x:Key="FontSizeLarge">18</sys:Double>
        <sys:Double x:Key="FontSizeMedium">15</sys:Double>
        <sys:Double x:Key="FontSizeSmall">12</sys:Double>

        <SolidColorBrush x:Key="ColorPanelBackground" Color="#696969"/>
        <SolidColorBrush x:Key="ColorPanelTitel" Color="Gray"/>
        <SolidColorBrush x:Key="ColorPanelHighlight" Color="LightGray"/>
        <SolidColorBrush x:Key="ColorDefault" Color="White"/>
        <SolidColorBrush x:Key="ColorBoolean" Color="GreenYellow"/>
        <SolidColorBrush x:Key="ColorDouble" Color="Blue"/>
        <SolidColorBrush x:Key="ColorLong" Color="DarkBlue"/>
        <SolidColorBrush x:Key="ColorMap" Color="Purple"/>
        <SolidColorBrush x:Key="ColorInt" Color="LightBlue"/>
        <SolidColorBrush x:Key="ColorPicture" Color="LightPink"/>
        <SolidColorBrush x:Key="ColorVector3d" Color="Yellow"/>
        <SolidColorBrush x:Key="ColorCollection" Color="Brown"/>
        <SolidColorBrush x:Key="ColorBuffer" Color="DarkRed"/>


        <ToolTip x:Key="nodeViewerToolTip" DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}" Visibility="{Binding Path=IsPreview, Converter={StaticResource VisibilityAsBooleanConverter}, ConverterParameter={x:Static wpfConverters:VisibilityAsBooleanConverterOptions.Negate}}" Background="Transparent">
            <Rectangle Width="{Binding ActualWidth}" Height="{Binding ActualHeight}" >
                <Rectangle.Fill>
                    <VisualBrush Visual="{Binding}"/>
                </Rectangle.Fill>
            </Rectangle>
        </ToolTip>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Tahoma Regular" />
            <Setter Property="FontSize" Value="15" />
        </Style>
        <Style x:Key="TextBoxtyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Tahoma Regular" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Background" Value="#898989" />
        </Style>

        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorPanelHighlight}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorPanelTitel}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                Background="White"
                BorderThickness="1"
                                CornerRadius="4">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonCustomBackground" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorPanelTitel}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorPanelHighlight}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key ="imageButtonTemplate" TargetType ="{x:Type Button}">
            <Setter Property ="Template">
                <Setter.Value>
                    <ControlTemplate TargetType ="{x:Type Button}">
                        <Grid>
                            <Image x:Name="imageButtonBackground" Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/button_off.png"/>
                            <TextBlock FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property ="IsPressed" Value ="True">
                                <Setter TargetName="imageButtonBackground" Property="Source">
                                    <Setter.Value>
                                        pack://siteoforigin:,,,/Resources/button_on.png
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property ="IsEnabled" Value ="False">
                                <Setter Property="Opacity" Value="0.5">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Begin of ScrollViewer Style. Source: http://www.codeproject.com/Articles/41787/Creating-a-Blend-like-Scrollbar-->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="DarkGray"></SolidColorBrush>
        <SolidColorBrush x:Key="StandardBrush" Color="LightGray"></SolidColorBrush>
        <SolidColorBrush x:Key="PressedBrush" Color="Gray"></SolidColorBrush>
        <SolidColorBrush x:Key="HoverBrush" Color="#fefefe"></SolidColorBrush>


        <Style x:Key="LineButtonUpStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid Margin="1" Height="18" >
                            <Path Stretch="None"
HorizontalAlignment="Center"
VerticalAlignment="Center" Name="Path"  
Fill="{StaticResource
StandardBrush}"
  Data="M 0 8 L 8 8 L 4 0 Z"></Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Path" Property="Fill"
Value="{StaticResource HoverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Path" Property="Fill"
Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LineButtonDownStyle"
TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable"
Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type
RepeatButton}">
                        <Grid Margin="1"
Height="18" >
                            <Path Stretch="None" HorizontalAlignment="Center"

    VerticalAlignment="Center" Name="Path"  Fill="{StaticResource
StandardBrush}"

   Data="M 0 0 L 4 8 L 8 0 Z"></Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource HoverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LineButtonLeftStyle"
TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable"
Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type
RepeatButton}">
                        <Grid Margin="1"
Height="18" >
                            <Path Stretch="None" HorizontalAlignment="Center"

    VerticalAlignment="Center" Name="Path"  Fill="{StaticResource
StandardBrush}"

   Data="M 0 4 L 8 0 L 8 8 Z"></Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource HoverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LineButtonRightStyle"
TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable"
Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type
RepeatButton}">
                        <Grid Margin="1"
Height="18" >
                            <Path Stretch="None" HorizontalAlignment="Center"

    VerticalAlignment="Center" Name="Path"  Fill="{StaticResource
StandardBrush}"

   Data="M 0 0 L 8 4 L 0 8 Z"></Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource HoverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource PressedBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle"
TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalScrollBarThumbStyle"
TargetType="{x:Type Thumb}">

            <Setter Property="IsTabStop"
Value="False"/>
            <Setter Property="Focusable"
Value="False"/>
            <Setter Property="Margin"
Value="1,0,1,0" />
            <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Width="8" Name="ellipse"  Stroke="{StaticResource
StandardBorderBrush}"
Fill="{StaticResource StandardBrush}"
           RadiusX="5" RadiusY="5"></Rectangle>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ellipse"
Property="Fill" Value="{StaticResource HoverBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="ellipse"
Property="Fill" Value="{StaticResource PressedBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalScrollBarThumbStyle"
TargetType="{x:Type Thumb}">

            <Setter Property="IsTabStop"
Value="False"/>
            <Setter Property="Focusable"
Value="False"/>
            <Setter Property="Margin"
Value="0,1,0,1" />
            <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Height="8" Name="ellipse"  Stroke="{StaticResource
StandardBorderBrush}"
Fill="{StaticResource StandardBrush}"
           RadiusX="5" RadiusY="5"></Rectangle>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ellipse"
Property="Fill" Value="{StaticResource HoverBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="ellipse"
Property="Fill" Value="{StaticResource PressedBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Background="{StaticResource ColorPanelBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <RepeatButton Grid.Row="0" Height="18"
      Style="{StaticResource LineButtonUpStyle}"

Command="ScrollBar.LineUpCommand">
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand"
              Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource VerticalScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand"
                   Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Height="18" Style="{StaticResource LineButtonDownStyle}"
        Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar"
TargetType="{x:Type ScrollBar}">
            <Grid Background="{StaticResource ColorPanelBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="18"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <RepeatButton Grid.Column="0" Width="18"
     Style="{StaticResource LineButtonLeftStyle}"
 Command="ScrollBar.LineLeftCommand">
                        </RepeatButton>
                        <Track Name="PART_Track"
Grid.Column="1" IsDirectionReversed="False" >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageLeftCommand"
                        Style="{StaticResource
ScrollBarPageButtonStyle}">
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                        <Thumb Style="{StaticResource HorizontalScrollBarThumbStyle}">
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageRightCommand"
                        Style="{StaticResource ScrollBarPageButtonStyle}">
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Column="2" Width="18"
 Style="{StaticResource
LineButtonRightStyle}"
                Command="ScrollBar.LineRightCommand">
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- End of ScrollViewer Style-->

    </Application.Resources>
</Application>
